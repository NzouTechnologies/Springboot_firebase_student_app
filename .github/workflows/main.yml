name: CICD pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  analyse_code:
    name: Code Analysis
    runs-on: ubuntu-latest
    
    steps:
      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'adopt'
          
      - name: Check out code
        uses: actions/checkout@v2
        
      - name: SonarCloud Scan
        run: mvn -B verify sonar:sonar -Dsonar.projectKey=githubprojects_firebase-springboot-studentproject -Dsonar.organization=githubprojects -Dsonar.host.url=https://sonarcloud.io -Dsonar.login=4fb3a629ee3d22021e9789933db64c0a5eeabc51
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        
  build_and_test:
    needs: analyse_code
    name: Build and Test
    runs-on: ubuntu-latest
    
    steps:
      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'adopt'
          
      - name: Check out code
        uses: actions/checkout@v2
        
      - name: Build and test
        run: mvn clean test
        
      - name: Upload Test Results
        uses: actions/upload-artifact@v2
        with:
          name: test-results
          path: target/surefire-reports
  build_push_docker_image:
    name: Build and Push Docker Image
    needs: build_and_test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Build Docker Image
        run: mvn k8s:build -DskipTests -Djkube.generator.name="nzoutech/studentsimage"

      - name: View Docker Image
        run: docker images 

      - name: Push Docker Image
        run: |
          DOCKER_IMAGE_NAME=nzoutech/studentsimage
          DOCKER_IMAGE_TAG=${{github.run_number }}
          DOCKER_REGISTRY=docker.io
          DOCKER_USERNAME=${{ secrets.DOCKERHUB_USERNAME }}
          DOCKER_PASSWORD=${{ secrets.DOCKERHUB_TOKEN }}
          docker tag $DOCKER_IMAGE_NAME $DOCKER_REGISTRY/$DOCKER_IMAGE_NAME:$DOCKER_IMAGE_TAG
          echo $DOCKER_PASSWORD | docker login $DOCKER_REGISTRY -u $DOCKER_USERNAME --password-stdin
          docker push $DOCKER_REGISTRY/$DOCKER_IMAGE_NAME:$DOCKER_IMAGE_TAG
